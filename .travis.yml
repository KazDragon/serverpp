language: cpp
os: linux

compiler:
  - clang

linux_gcc: &linux_gcc
  os: linux
  dist: xenial
  compiler: gcc
  addons:
    apt:
      sources:
        - ubuntu-toolchain-r-test
        - sourceline: 'ppa:mhier/libboost-latest'
      packages:
        - g++-5
        - boost1.74

linux_clang: &linux_clang
  os: linux
  dist: xenial
  compiler: clang
  addons:
    apt:
      sources:
        - ubuntu-toolchain-r-test
        - sourceline: 'ppa:mhier/libboost-latest'
      packages:
        - clang-4.0
        - boost1.74

jobs:
  include:
    - <<: *linux_gcc
#    - <<: *linux_clang

cache:
  directories:
    - $HOME/3party

before_install:
  - export BUILD_ROOT=$PWD
  - export EXTERNAL_ROOT=$HOME/3party
  - export EXTERNAL_BUILD_ROOT=$HOME/external_build
  - mkdir $EXTERNAL_BUILD_ROOT || true

  - if [ ! -f "$EXTERNAL_ROOT/gsl-lite/include/gsl/gsl-lite.hpp" ]; then
      cd $EXTERNAL_BUILD_ROOT;
      wget https://github.com/gsl-lite/gsl-lite/archive/v0.34.0.tar.gz;
      tar -xzf v0.34.0.tar.gz;
      cd gsl-lite-0.34.0;
      cmake -DCMAKE_INSTALL_PREFIX=$EXTERNAL_ROOT/gsl-lite -DGSL_LITE_OPT_BUILD_TESTS=Off .;
      make -j2 && make install;
    fi

  - cd $BUILD_ROOT

before_script:
  - mkdir build || true
  - cd build
  - cmake -DCMAKE_BUILD_TYPE=Release -DCMAKE_PREFIX_PATH=$EXTERNAL_ROOT ..

script:
  - make VERBOSE=1

notifications:
  email:
    on_success: change # [always|never|change] # default: change
    on_failure: change # [always|never|change] # default: always
  slack:
    rooms:
      - kazdragon:${SLACK_TOKEN}#ci
  webhooks:
    urls:
      - https://webhooks.gitter.im/e/${GITTER_TOKEN}
    on_success: change  # options: [always|never|change] default: always
    on_failure: always  # options: [always|never|change] default: always
    on_start: never     # options: [always|never|change] default: always
